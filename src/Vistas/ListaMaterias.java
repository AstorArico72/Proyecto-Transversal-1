/*
 * Editor de materias con una tabla
 */
package Vistas;

/**
 *
 * @author Pablo
 */
public class ListaMaterias extends javax.swing.JInternalFrame {
    private final int LIMITE = 10;
    private int pagina = 1;
    private boolean editar = false;
    private java.util.List<Recursos.Materia> materias;
    private javax.swing.table.DefaultTableModel d;
    private BD.MateriaData md;
    private Recursos.Materia ma;
    /**
     * Creates new form ListaMaterias
     */
    public ListaMaterias() {
        initComponents();
        iniciar();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        nav = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        navMax = new javax.swing.JLabel();
        navSig = new javax.swing.JButton();
        navPag = new javax.swing.JTextField();
        navAnt = new javax.swing.JButton();
        formulario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtAnio = new javax.swing.JTextField();
        chkEstado = new javax.swing.JCheckBox();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Materias");
        setToolTipText("");

        tabla.setModel(new javax.swing.table.DefaultTableModel());
        tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel4.setText("/ ");

        navMax.setText("999");

        navSig.setText(">");
        navSig.setEnabled(false);
        navSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navSigActionPerformed(evt);
            }
        });

        navPag.setText("1");
        navPag.setBorder(null);
        navPag.setEnabled(false);
        navPag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                navPagKeyPressed(evt);
            }
        });

        navAnt.setText("<");
        navAnt.setEnabled(false);
        navAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navAntActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navLayout = new javax.swing.GroupLayout(nav);
        nav.setLayout(navLayout);
        navLayout.setHorizontalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(navAnt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navPag, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navMax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navSig)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        navLayout.setVerticalGroup(
            navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(navAnt)
                    .addComponent(navSig)
                    .addComponent(navPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(navMax))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("ID:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("AÃ±o:");

        txtId.setEditable(false);

        txtNombre.setEditable(false);

        txtAnio.setEditable(false);

        chkEstado.setText("Estado");
        chkEstado.setEnabled(false);

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formularioLayout = new javax.swing.GroupLayout(formulario);
        formulario.setLayout(formularioLayout);
        formularioLayout.setHorizontalGroup(
            formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formularioLayout.createSequentialGroup()
                        .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAnio)
                            .addComponent(txtNombre)
                            .addComponent(txtId)
                            .addComponent(chkEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formularioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar))))
        );
        formularioLayout.setVerticalGroup(
            formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar))
                    .addComponent(formulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void navAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navAntActionPerformed
        anterior();
    }//GEN-LAST:event_navAntActionPerformed

    private void navSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navSigActionPerformed
        siguiente();
    }//GEN-LAST:event_navSigActionPerformed

    private void navPagKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_navPagKeyPressed
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) irA(Integer.parseInt(navPag.getText()));
    }//GEN-LAST:event_navPagKeyPressed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMousePressed
        if(evt.getClickCount() == 2 && tabla.getSelectedRow() != -1)
            formulario();
    }//GEN-LAST:event_tablaMousePressed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox chkEstado;
    private javax.swing.JPanel formulario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel nav;
    private javax.swing.JButton navAnt;
    private javax.swing.JLabel navMax;
    private javax.swing.JTextField navPag;
    private javax.swing.JButton navSig;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private void iniciar() {
        materias = new java.util.ArrayList<>();
        if(TPTransversal.Universidad.c.getConexion() != null){
            btnActualizar.setText("Actualizar");
            md = new BD.MateriaData(TPTransversal.Universidad.c);
            ma = new Recursos.Materia();
            //Tabla
            d = //((javax.swing.table.DefaultTableModel) tabla.getModel());
                new javax.swing.table.DefaultTableModel() {
                    @Override
                    public boolean isCellEditable(int row, int column) {       
                        return false;
                    }
                };
            tabla.setModel(d);
            d.addColumn("Id");d.addColumn("Nombre");d.addColumn("AÃ±o");d.addColumn("Estado");
            //nav y formulario
            nav.setVisible(false);
            formulario.setVisible(false);
            //actualizar
            actualizar();
        }else btnActualizar.setText("Reconectar");
    }
    
    private void actualizar(){
        if(btnActualizar.getText().equals("Actualizar")){
            int max = 0;
            materias = md.obtenerMaterias();
            //mostrar las materias en la tabla, con limite
            pagina = 1;
            irA(pagina);
            //actualizar para navegar
            max = Math.round(materias.size() / LIMITE) + 1;
            navPag.setText("1");
            navMax.setText(String.valueOf(max));
            //mostrar navegador si hay mas de 10 elementos
            if(max > 1){
                nav.setVisible(true);
                navAnt.setEnabled(true);
                navPag.setEnabled(true);
                navSig.setEnabled(true);
            }else{
                nav.setVisible(false);
                navAnt.setEnabled(false);
                navPag.setEnabled(false);
                navSig.setEnabled(false);
            }
            //Ocultar formulario y resetear campos
            txtId.setText("");
            txtNombre.setText("");txtNombre.setEditable(false);
            txtAnio.setText("");txtAnio.setEditable(false);
            chkEstado.setSelected(true);chkEstado.setEnabled(false);
            btnEditar.setEnabled(false);
            btnGuardar.setEnabled(false);
            formulario.setVisible(false);
            editar = false;
        }else{
            iniciar();
        }
    }
    private void formulario(){
        int id = tabla.getSelectedRow();
        if(!editar){
            if(id > -1){
                ma = materias.get(id+(pagina-1)*10);//ver para pagina 2, 3 ...
                formulario.setVisible(true);
                btnEditar.setEnabled(true);
                txtId.setText(String.valueOf(ma.getIdMateria()));
                txtNombre.setText(ma.getNombreMateria());
                txtAnio.setText(String.valueOf(ma.getAnio()));
                chkEstado.setSelected(ma.isEstado());
            }
        }else javax.swing.JOptionPane.showMessageDialog(this, "Estas editando, guardar o cancelar editor.", "Error al Editar", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    private void editar(){
        txtNombre.setEditable(true);txtNombre.requestFocus();
        txtAnio.setEditable(true);
        chkEstado.setEnabled(true);
        btnEditar.setEnabled(false);
        btnGuardar.setEnabled(true);
        btnCancelar.setEnabled(true);
        editar = true;
    }
    private void guardar(){
        int pag = pagina;
        ma = new Recursos.Materia(
                Integer.parseInt(txtId.getText()),
                txtNombre.getText(),
                Integer.parseInt(txtAnio.getText()),
                chkEstado.isSelected()
        );
        if(ma.isEstado())md.activarMateria(ma.getIdMateria());
        else md.desactivarMateria(ma.getIdMateria());
        md.actualizarMateria(ma);
        formulario.setVisible(false);
        txtNombre.setEditable(false);
        txtAnio.setEditable(false);
        chkEstado.setEnabled(false);
        btnEditar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnGuardar.setEnabled(false);
        //actualizar la tabla
        actualizar();
        irA(pag);
        editar = false;
    }
    private void cancelar(){
        formulario.setVisible(false);
        txtNombre.setEditable(false);
        txtAnio.setEditable(false);
        chkEstado.setEnabled(false);
        btnEditar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnGuardar.setEnabled(false);
        editar = false;
    }
    private void anterior(){
        if(pagina >= 2)irA(pagina - 1);
    }
    private void siguiente(){
        if(pagina < Integer.parseInt(navMax.getText()))irA(pagina + 1);
    }
    private void irA(int indice){
        if(indice > 0 && indice <= Integer.parseInt(navMax.getText())){
            pagina = indice;
            indice = indice - 1;
            navPag.setText(String.valueOf(pagina));
            d.setRowCount(0);
            for (int i = indice*10; i < LIMITE*pagina && i < materias.size(); i++) {
                ma = materias.get(i);
                d.addRow(new String[] {
                    String.valueOf(ma.getIdMateria()),
                    ma.getNombreMateria(),
                    String.valueOf(ma.getAnio()),
                    String.valueOf(ma.isEstado())
                });
            }
        }
    }
}
